(function() {
    function t(t) {
        var e = 0 !== t.offsetWidth ? t : t.parentElement,
            o = e.offsetWidth,
            n = e.getBoundingClientRect().width;
        return n / o
    }

    function e(t) {
        var e = t.type.indexOf("touch") > -1,
            o = e ? t.changedTouches[0] : t;
        return {
            x: o.clientX,
            y: o.clientY
        }
    }

    function o(t) {
        return document.elementFromPoint(e(t).x, e(t).y)
    }

    function n(o) {
        function n(t) {
            var o = e(t).y,
                n = e(t).x,
                r = (o - s) / l + i,
                f = (n - a) / l + c;
            d.newY = r, d.newX = f, "horizon" !== u && (h.style.top = r + "px"), "vertical" !== u && (h.style.left = f + "px"), h.classList.add("isDrag"), g && g(d, t)
        }

        function r(t) {
            f.removeEventListener("mousemove", n), f.removeEventListener("touchmove", n), document.removeEventListener("mouseup", r), document.removeEventListener("touchend", r), h.classList.remove("isDrag"), m && m(d, t)
        }
        var s, a, i, c, l, d = this,
            u = o.type ? o.type : "all",
            h = o.dragObj,
            f = o.container ? o.container : document.body;
        if (o.callback) var g = o.callback.move || null,
            b = o.callback.start || null,
            m = o.callback.end || null;
        this.dragObj = h, this.startDrag = function(e) {
            e.stopPropagation(), l = t(h), s = "touchstart" == e.type ? e.touches[0].clientY : e.clientY, a = "touchstart" == e.type ? e.touches[0].clientX : e.clientX, i = h.offsetTop, c = h.offsetLeft, h.style.transition = "none", b && b(d, event), f.addEventListener("mousemove", n), f.addEventListener("touchmove", n), document.addEventListener("mouseup", r), document.addEventListener("touchend", r)
        }, h.addEventListener("mousedown", this.startDrag.bind(this)), h.addEventListener("touchstart", this.startDrag.bind(this)), f.addEventListener("touchstart", function(t) {
            t.stopPropagation()
        }), f.addEventListener("pointerup", function(t) {
            t.stopPropagation()
        })
    }

    function r(t, e, o, n) {
        t.style.top = "", t.style.left = "", e && (e.style.webkitTransform = "rotate(0deg)", e.style.mozTransform = "rotate(0deg)", e.style.msTransform = "rotate(0deg)", e.style.transform = "rotate(0deg)"), o && (o.style.webkitTransform = "rotate(0deg)", o.style.mozTransform = "rotate(0deg)", o.style.msTransform = "rotate(0deg)", o.style.transform = "rotate(0deg)"), n && (n.style.webkitTransform = "rotate(0deg)", n.style.mozTransform = "rotate(0deg)", n.style.msTransform = "rotate(0deg)", n.style.transform = "rotate(0deg)")
    }

    function s(t) {
        function e(t) {
            var e = t.cloneNode(!0);
            return e.classList.add("isClone"), e
        }

        function s(t) {
            var e = t ? "X" : "Y",
                o = f["reflect" + e + "Value"],
                n = o ? 0 : 180,
                r = f["reflect" + e + "Target"];
            r.setAttribute("reflect", n), r && (r.style.transform = "rotate" + e + "(" + n + "deg)"), f["reflect" + e + "Value"] = !o
        }

        function a(t, e) {
            var o = f.noDrag ? f.obj : f.obj.dragObj;
            f.container.querySelectorAll(".reflectIcon").length && o.querySelectorAll("[reflect]").length && 1 === o.querySelectorAll('[reflect="180"]').length ? t ? f.rotateValue -= f.degree : f.rotateValue += f.degree : t ? f.rotateValue += f.degree : f.rotateValue -= f.degree;
            var n = "rotate(" + f.rotateValue + "deg)";
            f.target.setAttribute("rotate", f.rotateValue), f.target.style.webkitTransform = n, f.target.style.mozTransform = n, f.target.style.msTransform = n, f.target.style.transform = n
        }

        function i(t) {
            f.callback && f.callback.move && f.callback.move(f)
        }

        function c(t) {
            f.callback && f.callback.start && f.callback.start(f), !f.outContainer && f.copyMode && (f.container.appendChild(f.copyObj), new $Rotate({
                obj: f.copyObj,
                target: f.copyObj.querySelector(".js-rotateTarget"),
                degree: f.degree,
                rightButton: f.copyObj.querySelector(".js-rotateButton.right"),
                leftButton: f.copyObj.querySelector(".js-rotateButton.left"),
                copy: !0,
                clone: !0,
                callback: f.callback
            }))
        }

        function l(t) {
            f.callback && f.callback.end && f.callback.end(f), f.pointerOff(window.$rotateObjs), t.dragObj.classList.remove("isDrag"), o(event) == f.container ? (r(t.dragObj, f.target, f.reflectXTarget, f.reflectYTarget), t.dragObj.classList.remove("showRotate"), f.resetData(), f.isClone && (f.outContainer = !1, f.container.contains(t.dragObj) && f.container.removeChild(t.dragObj))) : (t.dragObj.classList.add("showRotate"), f.outContainer = !0), f.pointerOn(window.$rotateObjs)
        }

        function d(t, e) {
            h = setInterval(function() {
                a(t)
            }, 30)
        }

        function u() {
            h && clearInterval(h)
        }
        var h, f = this;
        this.obj = t.noDrag ? t.obj : new n({
            dragObj: t.obj,
            container: document,
            callback: {
                start: c,
                move: i,
                end: l
            }
        }), t.noDrag && this.obj.classList.add("showRotate"), this.container = t.obj.parentNode, this.rightButton = t.rightButton, this.leftButton = t.leftButton, this.target = t.target, this.topReflectButton = t.topReflectButton, this.bottomReflectButton = t.bottomReflectButton, this.leftReflectButton = t.leftReflectButton, this.rightReflectButton = t.rightReflectButton, this.reflectXTarget = t.reflectXTarget, this.reflectYTarget = t.reflectYTarget, this.resetButton = t.resetButton, this.rotateValue = 0, this.degree = t.degree || 45, this.callback = t.callback, this.copyMode = t.copy || !1, this.noDrag = t.noDrag || !1, this.isClone = t.clone || !1, this.isCopy = this.copyMode || !1, this.outContainer = !1, this.reflectXValue = !1, this.reflectYValue = !1, this.rightButton && this.leftButton && this.container.classList.add("doubleRotate"), this.isCopy && (this.copyObj = e(t.obj)), window.$rotateObjs.push(t.obj), this.pointerOff = function(t) {
            var e = function(t) {
                t && t.classList.add("pointerOff")
            };
            t.forEach(e)
        }, this.pointerOn = function(t) {
            var e = function(t) {
                t && t.classList.remove("pointerOff")
            };
            t.forEach(e)
        }, this.resetData = function() {
            f.rotateValue = 0, f.reflectXValue = !1, f.reflectYValue = !1, this.target && this.target.removeAttribute("rotate"), this.reflectXTarget && this.reflectXTarget.removeAttribute("reflect"), this.reflectYTarget && this.reflectYTarget.removeAttribute("reflect")
        }, this.reset = function() {
            if (r(t.obj, f.target, f.reflectXTarget, f.reflectYTarget), f.resetData(), f.toggleAnswer(!1), f.noDrag || t.obj.classList.remove("showRotate"), f.copyMode) {
                var o = $ts.getEl(".js-rotate", f.container).filter(function(t) {
                    return t.classList.contains("isClone")
                });
                o && o.length > 0 && o.forEach(function(t) {
                    f.container.contains(t) && f.container.removeChild(t)
                }), f.isCopy = t.copy || !1, f.outContainer = !1, f.copyObj = e(t.obj)
            }
            f.callback && f.callback.reset && f.callback.reset(f)
        }, this.toggleAnswer = function(t) {
            f.container.classList[t ? "add" : "remove"]("showAnswer"), f.resetButton && f.resetButton.classList[t ? "add" : "remove"]("dim")
        }, this.rightButton && (1 == this.degree ? (this.rightButton.addEventListener("mousedown", d.bind(this, !0)), this.rightButton.addEventListener("touchstart", d.bind(this, !0)), document.addEventListener("mouseup", u), document.addEventListener("touchend", u)) : this.rightButton.addEventListener("click", a.bind(this, !0))), this.leftButton && (1 == this.degree ? (this.leftButton.addEventListener("mousedown", d.bind(this, !1)), this.leftButton.addEventListener("touchstart", d.bind(this, !1)), document.addEventListener("mouseup", u), document.addEventListener("touchend", u)) : this.leftButton.addEventListener("click", a.bind(this, !1))), this.topReflectButton && this.topReflectButton.addEventListener("click", s.bind(this, !0)), this.bottomReflectButton && this.bottomReflectButton.addEventListener("click", s.bind(this, !0)), this.leftReflectButton && this.leftReflectButton.addEventListener("click", s.bind(this, !1)), this.rightReflectButton && this.rightReflectButton.addEventListener("click", s.bind(this, !1)), this.resetButton && (this.resetButton.addEventListener("click", function() {
            f.reset(), window.$efSound && window.$efSound.click()
        }), this.resetButton.addEventListener("mouseover", function() {
            this.classList.add("hover")
        }), this.resetButton.addEventListener("mouseout", function() {
            this.classList.remove("hover")
        }))
    }
    window.$rotateObjs = [], window.$Rotate = s
})();